项目大致结构：
敌人类
敌人马达：EnemyMotor，提供移动、旋转、寻路功能。
    定义向前移动方法、定义朝向目标点方法、定义寻路方法

敌人状态信息：EnemyStatusInfo,定义血量、提供受伤、死亡功能
    定义变量:当前生命值，当前生命值。定义方法:受伤，死亡。

敌人动画：EnemyAnimation,定义动画名称，提供播放动画功能
    定义各种动画名称的变量，如跑步、闲置、攻击。定义AnimationAction类，提供有关动画的行为。

敌人AI，通过判断状态，执行寻路或者攻击
    获取[敌人马达、敌人动画]脚本对象引用、定义枚举:敌人状态State、根据每帧状态执行相应行为。

敌人生成器：EnemySpawn，附加到根路线中，提供生成敌人的功能。
    创建类--路线WayLine，包含属性:路点坐标Vector3[]Points，是否可用bool IsUseable。
    当生成器启用后，计算所有子物体[路线]的路点坐标。当生成敌人时，随机选择一条可以使用的路线。
——定义字段
    WayLine[] lines 用于存储所有路线
    GameObject[] enemylypes 用于记录敌人预制件。
    int startCount 用于记录开始时需要创建的敌人数量。
    int spawnedCount 用于记录已经产生的敌人数量
    int maxCount 用于记录产生敌人数量的上限
    int maxDelay 用于记录产生敌人的最大延迟时间
——定义方法
    CalculateWayLines()用于计算所有路线及坐标
    GenerateEnemy()，用于生成一个敌人。

子弹类
父类脚本--子弹 Bullet，计算攻击的目标点，执行移动，创建接触特效。
——定义方法
    CalculateTargetPoint()射线检测子弹击中的目标。
    Movement()移动至目标点。

子类脚本--玩家子弹PlayerBullet，继承自Bullet，射线检测敌人与周围环境物体，根据击中敌人部位扣血。
子类脚本--敌人子弹EnemyBullet，继承自Bullet，子弹检测碰撞，与玩家头部接触时扣血。


大三下半路出家转的游戏，花学一个月学了C#和Unity3D写的游戏因为资源有限，模型等地图资源都是网上找的，可能有点粗糙。

Script里的脚本都是自己写的，同时也做了一些七七八八的预制件（经过以前写python项目时候的教训写了一大注释以便拯救我这垃圾记性）。都有写注释这里就不多说。
因为当时学的少也没考虑复用性和设计模式所以很多地方都写死了，所以就当作一次性游戏了，只在第一关放了人物，后续还会补充。

第一人称用的是Unity3D的插件（现在得去网上下载）放在Standard Assets文件夹中。
因为第一个项目很多东西写完现在看起来觉得很蠢索性就当作实验品玩了。自己纯UGUI做了游戏设置、游戏开始界面、血条显示。
还加了按E补充子弹同时显示进度条，效果和穿越火线一样，当然丑是肯定丑多了，不会自己做UI设计真的很难受。

本来敌人是用路点寻路做的，但是玩起来真的太呆了。然后自己弄了个简单状态机添加更多判断来攻击玩家，
加上用Navigation寻路系统做了一下，后面又加了音频检测让所有敌人在远处能同时攻击。
毕竟是第一个项目想到啥就写啥上去，后面会发一个比较完善的ARPG游戏，这个就当作乐子了，写得差误喷呀。
